{
	"info": {
		"_postman_id": "869bc4f7-c837-4a11-b0e4-6a347ef8ad5a",
		"name": "Course - GraphQL",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "REST API Star Wars",
			"item": [
				{
					"name": "People - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/people?page=5",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"people"
							],
							"query": [
								{
									"key": "page",
									"value": "5"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "People - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/people/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"people",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Films - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/films?page=1",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"films"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Films - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/films/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"films",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Starships - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/starships?page=1",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"starships"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Starships - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/starships/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"starships",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vehicles - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/vehicles?page=1",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"vehicles"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Vehicles - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/vehicles/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"vehicles",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Species - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/species?page=1",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"species"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Species - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/species/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"species",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Planes - All",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/planets?page=1",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"planets"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Planets - By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://swapi.dev/api/planets/:id",
							"protocol": "https",
							"host": [
								"swapi",
								"dev"
							],
							"path": [
								"api",
								"planets",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "3"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GraphQL Star Wars",
			"item": [
				{
					"name": "queries",
					"item": [
						{
							"name": "allFilms",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allFilms ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int) {\n    allFilms (after: $after10, first: $first10, before: $before10, last: $last10) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                title\n                episodeID\n                openingCrawl\n                director\n                producers\n                releaseDate\n                speciesConnection (after: $after, first: $first, before: $before, last: $last) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                }\n                starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                characterConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    characters {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                planetConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    planets {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        films {\n            title\n            episodeID\n            openingCrawl\n            director\n            producers\n            releaseDate\n            speciesConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                totalCount\n            }\n            starshipConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                totalCount\n            }\n            vehicleConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                totalCount\n            }\n            characterConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                totalCount\n            }\n            planetConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "film",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query film ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $after12: String, $first12: Int, $before12: String, $last12: Int, $after13: String, $first13: Int, $before13: String, $last13: Int, $after14: String, $first14: Int, $before14: String, $last14: Int, $after15: String, $first15: Int, $before15: String, $last15: Int, $after16: String, $first16: Int, $before16: String, $last16: Int, $after17: String, $first17: Int, $before17: String, $last17: Int, $after18: String, $first18: Int, $before18: String, $last18: Int, $after19: String, $first19: Int, $before19: String, $last19: Int, $id: ID, $filmID: ID) {\n    film (id: $id, filmID: $filmID) {\n        title\n        episodeID\n        openingCrawl\n        director\n        producers\n        releaseDate\n        speciesConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                node {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    personConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                cursor\n            }\n            totalCount\n            species {\n                name\n                classification\n                designation\n                averageHeight\n                averageLifespan\n                eyeColors\n                hairColors\n                skinColors\n                language\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    filmConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                personConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    people {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n        }\n        starshipConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            starships {\n                name\n                model\n                starshipClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                hyperdriveRating\n                MGLT\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    pilots {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        vehicleConnection (after: $after12, first: $first12, before: $before12, last: $last12) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            vehicles {\n                name\n                model\n                vehicleClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n                    totalCount\n                }\n                filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        characterConnection (after: $after16, first: $first16, before: $before16, last: $last16) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            characters {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after13, first: $first13, before: $before13, last: $last13) {\n                    totalCount\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after14, first: $first14, before: $before14, last: $last14) {\n                    totalCount\n                }\n                vehicleConnection (after: $after15, first: $first15, before: $before15, last: $last15) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        planetConnection (after: $after19, first: $first19, before: $before19, last: $last19) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            planets {\n                name\n                diameter\n                rotationPeriod\n                orbitalPeriod\n                gravity\n                population\n                climates\n                terrains\n                surfaceWater\n                residentConnection (after: $after17, first: $first17, before: $before17, last: $last17) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    residents {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after18, first: $first18, before: $before18, last: $last18) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"after12\": \"\",\n  \"first12\": 0,\n  \"before12\": \"\",\n  \"last12\": 0,\n  \"after13\": \"\",\n  \"first13\": 0,\n  \"before13\": \"\",\n  \"last13\": 0,\n  \"after14\": \"\",\n  \"first14\": 0,\n  \"before14\": \"\",\n  \"last14\": 0,\n  \"after15\": \"\",\n  \"first15\": 0,\n  \"before15\": \"\",\n  \"last15\": 0,\n  \"after16\": \"\",\n  \"first16\": 0,\n  \"before16\": \"\",\n  \"last16\": 0,\n  \"after17\": \"\",\n  \"first17\": 0,\n  \"before17\": \"\",\n  \"last17\": 0,\n  \"after18\": \"\",\n  \"first18\": 0,\n  \"before18\": \"\",\n  \"last18\": 0,\n  \"after19\": \"\",\n  \"first19\": 0,\n  \"before19\": \"\",\n  \"last19\": 0,\n  \"id\": 0,\n  \"filmID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "allPeople",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allPeople ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int) {\n    allPeople (after: $after10, first: $first10, before: $before10, last: $last10) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    personConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                        totalCount\n                    }\n                    filmConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        people {\n            name\n            birthYear\n            eyeColor\n            gender\n            hairColor\n            height\n            mass\n            skinColor\n            homeworld {\n                name\n                diameter\n                rotationPeriod\n                orbitalPeriod\n                gravity\n                population\n                climates\n                terrains\n                surfaceWater\n                created\n                edited\n                id\n            }\n            filmConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                totalCount\n            }\n            species {\n                name\n                classification\n                designation\n                averageHeight\n                averageLifespan\n                eyeColors\n                hairColors\n                skinColors\n                language\n                created\n                edited\n                id\n            }\n            starshipConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                totalCount\n            }\n            vehicleConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "person",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query person ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $after12: String, $first12: Int, $before12: String, $last12: Int, $after13: String, $first13: Int, $before13: String, $last13: Int, $after14: String, $first14: Int, $before14: String, $last14: Int, $after15: String, $first15: Int, $before15: String, $last15: Int, $after16: String, $first16: Int, $before16: String, $last16: Int, $after17: String, $first17: Int, $before17: String, $last17: Int, $after18: String, $first18: Int, $before18: String, $last18: Int, $after19: String, $first19: Int, $before19: String, $last19: Int, $after20: String, $first20: Int, $before20: String, $last20: Int, $after21: String, $first21: Int, $before21: String, $last21: Int, $id: ID, $personID: ID) {\n    person (id: $id, personID: $personID) {\n        name\n        birthYear\n        eyeColor\n        gender\n        hairColor\n        height\n        mass\n        skinColor\n        homeworld {\n            name\n            diameter\n            rotationPeriod\n            orbitalPeriod\n            gravity\n            population\n            climates\n            terrains\n            surfaceWater\n            residentConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                    startCursor\n                    endCursor\n                }\n                edges {\n                    node {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                    cursor\n                }\n                totalCount\n                residents {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n            }\n            filmConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                    startCursor\n                    endCursor\n                }\n                edges {\n                    cursor\n                }\n                totalCount\n                films {\n                    title\n                    episodeID\n                    openingCrawl\n                    director\n                    producers\n                    releaseDate\n                    speciesConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    starshipConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                        totalCount\n                    }\n                    characterConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                        totalCount\n                    }\n                    planetConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n            }\n            created\n            edited\n            id\n        }\n        filmConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n            totalCount\n        }\n        species {\n            name\n            classification\n            designation\n            averageHeight\n            averageLifespan\n            eyeColors\n            hairColors\n            skinColors\n            language\n            homeworld {\n                name\n                diameter\n                rotationPeriod\n                orbitalPeriod\n                gravity\n                population\n                climates\n                terrains\n                surfaceWater\n                created\n                edited\n                id\n            }\n            personConnection (after: $after14, first: $first14, before: $before14, last: $last14) {\n                pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                    startCursor\n                    endCursor\n                }\n                edges {\n                    cursor\n                }\n                totalCount\n                people {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after12, first: $first12, before: $before12, last: $last12) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after13, first: $first13, before: $before13, last: $last13) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n            }\n            filmConnection (after: $after15, first: $first15, before: $before15, last: $last15) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n        starshipConnection (after: $after18, first: $first18, before: $before18, last: $last18) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            starships {\n                name\n                model\n                starshipClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                hyperdriveRating\n                MGLT\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after16, first: $first16, before: $before16, last: $last16) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    pilots {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after17, first: $first17, before: $before17, last: $last17) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        vehicleConnection (after: $after21, first: $first21, before: $before21, last: $last21) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            vehicles {\n                name\n                model\n                vehicleClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after19, first: $first19, before: $before19, last: $last19) {\n                    totalCount\n                }\n                filmConnection (after: $after20, first: $first20, before: $before20, last: $last20) {\n                    totalCount\n                }\n                created\n                edited\n                id\n            }\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"after12\": \"\",\n  \"first12\": 0,\n  \"before12\": \"\",\n  \"last12\": 0,\n  \"after13\": \"\",\n  \"first13\": 0,\n  \"before13\": \"\",\n  \"last13\": 0,\n  \"after14\": \"\",\n  \"first14\": 0,\n  \"before14\": \"\",\n  \"last14\": 0,\n  \"after15\": \"\",\n  \"first15\": 0,\n  \"before15\": \"\",\n  \"last15\": 0,\n  \"after16\": \"\",\n  \"first16\": 0,\n  \"before16\": \"\",\n  \"last16\": 0,\n  \"after17\": \"\",\n  \"first17\": 0,\n  \"before17\": \"\",\n  \"last17\": 0,\n  \"after18\": \"\",\n  \"first18\": 0,\n  \"before18\": \"\",\n  \"last18\": 0,\n  \"after19\": \"\",\n  \"first19\": 0,\n  \"before19\": \"\",\n  \"last19\": 0,\n  \"after20\": \"\",\n  \"first20\": 0,\n  \"before20\": \"\",\n  \"last20\": 0,\n  \"after21\": \"\",\n  \"first21\": 0,\n  \"before21\": \"\",\n  \"last21\": 0,\n  \"id\": 0,\n  \"personID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "allPlanets",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allPlanets ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int) {\n    allPlanets (after: $after4, first: $first4, before: $before4, last: $last4) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                name\n                diameter\n                rotationPeriod\n                orbitalPeriod\n                gravity\n                population\n                climates\n                terrains\n                surfaceWater\n                residentConnection (after: $after, first: $first, before: $before, last: $last) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    residents {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        planets {\n            name\n            diameter\n            rotationPeriod\n            orbitalPeriod\n            gravity\n            population\n            climates\n            terrains\n            surfaceWater\n            residentConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                totalCount\n            }\n            filmConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "planet",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query planet ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $id: ID, $planetID: ID) {\n    planet (id: $id, planetID: $planetID) {\n        name\n        diameter\n        rotationPeriod\n        orbitalPeriod\n        gravity\n        population\n        climates\n        terrains\n        surfaceWater\n        residentConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                node {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                cursor\n            }\n            totalCount\n            residents {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                        totalCount\n                    }\n                    filmConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    personConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                        totalCount\n                    }\n                    filmConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n        }\n        filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n            totalCount\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"id\": 0,\n  \"planetID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "allSpecies",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allSpecies ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int) {\n    allSpecies (after: $after6, first: $first6, before: $before6, last: $last6) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                name\n                classification\n                designation\n                averageHeight\n                averageLifespan\n                eyeColors\n                hairColors\n                skinColors\n                language\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                personConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    people {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        species {\n            name\n            classification\n            designation\n            averageHeight\n            averageLifespan\n            eyeColors\n            hairColors\n            skinColors\n            language\n            homeworld {\n                name\n                diameter\n                rotationPeriod\n                orbitalPeriod\n                gravity\n                population\n                climates\n                terrains\n                surfaceWater\n                created\n                edited\n                id\n            }\n            personConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                totalCount\n            }\n            filmConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "species",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query species ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $after12: String, $first12: Int, $before12: String, $last12: Int, $after13: String, $first13: Int, $before13: String, $last13: Int, $after14: String, $first14: Int, $before14: String, $last14: Int, $id: ID, $speciesID: ID) {\n    species (id: $id, speciesID: $speciesID) {\n        name\n        classification\n        designation\n        averageHeight\n        averageLifespan\n        eyeColors\n        hairColors\n        skinColors\n        language\n        homeworld {\n            name\n            diameter\n            rotationPeriod\n            orbitalPeriod\n            gravity\n            population\n            climates\n            terrains\n            surfaceWater\n            residentConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                    startCursor\n                    endCursor\n                }\n                edges {\n                    node {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                    cursor\n                }\n                totalCount\n                residents {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n            }\n            filmConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                    startCursor\n                    endCursor\n                }\n                edges {\n                    cursor\n                }\n                totalCount\n                films {\n                    title\n                    episodeID\n                    openingCrawl\n                    director\n                    producers\n                    releaseDate\n                    speciesConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    starshipConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                        totalCount\n                    }\n                    characterConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                        totalCount\n                    }\n                    planetConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n            }\n            created\n            edited\n            id\n        }\n        personConnection (after: $after14, first: $first14, before: $before14, last: $last14) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                cursor\n            }\n            totalCount\n            people {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n                    totalCount\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after12, first: $first12, before: $before12, last: $last12) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after13, first: $first13, before: $before13, last: $last13) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"after12\": \"\",\n  \"first12\": 0,\n  \"before12\": \"\",\n  \"last12\": 0,\n  \"after13\": \"\",\n  \"first13\": 0,\n  \"before13\": \"\",\n  \"last13\": 0,\n  \"after14\": \"\",\n  \"first14\": 0,\n  \"before14\": \"\",\n  \"last14\": 0,\n  \"id\": 0,\n  \"speciesID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "allStarships",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allStarships ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int) {\n    allStarships (after: $after4, first: $first4, before: $before4, last: $last4) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                name\n                model\n                starshipClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                hyperdriveRating\n                MGLT\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after, first: $first, before: $before, last: $last) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    pilots {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        starships {\n            name\n            model\n            starshipClass\n            manufacturers\n            costInCredits\n            length\n            crew\n            passengers\n            maxAtmospheringSpeed\n            hyperdriveRating\n            MGLT\n            cargoCapacity\n            consumables\n            pilotConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                totalCount\n            }\n            filmConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "starship",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query starship ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $id: ID, $starshipID: ID) {\n    starship (id: $id, starshipID: $starshipID) {\n        name\n        model\n        starshipClass\n        manufacturers\n        costInCredits\n        length\n        crew\n        passengers\n        maxAtmospheringSpeed\n        hyperdriveRating\n        MGLT\n        cargoCapacity\n        consumables\n        pilotConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                node {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                cursor\n            }\n            totalCount\n            pilots {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                        totalCount\n                    }\n                    filmConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    personConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                        totalCount\n                    }\n                    filmConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n        }\n        filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n            totalCount\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"id\": 0,\n  \"starshipID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "allVehicles",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allVehicles ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int) {\n    allVehicles (after: $after4, first: $first4, before: $before4, last: $last4) {\n        pageInfo {\n            hasNextPage\n            hasPreviousPage\n            startCursor\n            endCursor\n        }\n        edges {\n            node {\n                name\n                model\n                vehicleClass\n                manufacturers\n                costInCredits\n                length\n                crew\n                passengers\n                maxAtmospheringSpeed\n                cargoCapacity\n                consumables\n                pilotConnection (after: $after, first: $first, before: $before, last: $last) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    pilots {\n                        name\n                        birthYear\n                        eyeColor\n                        gender\n                        hairColor\n                        height\n                        mass\n                        skinColor\n                        created\n                        edited\n                        id\n                    }\n                }\n                filmConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n            cursor\n        }\n        totalCount\n        vehicles {\n            name\n            model\n            vehicleClass\n            manufacturers\n            costInCredits\n            length\n            crew\n            passengers\n            maxAtmospheringSpeed\n            cargoCapacity\n            consumables\n            pilotConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                totalCount\n            }\n            filmConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                totalCount\n            }\n            created\n            edited\n            id\n        }\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "vehicle",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query vehicle ($after: String, $first: Int, $before: String, $last: Int, $after1: String, $first1: Int, $before1: String, $last1: Int, $after2: String, $first2: Int, $before2: String, $last2: Int, $after3: String, $first3: Int, $before3: String, $last3: Int, $after4: String, $first4: Int, $before4: String, $last4: Int, $after5: String, $first5: Int, $before5: String, $last5: Int, $after6: String, $first6: Int, $before6: String, $last6: Int, $after7: String, $first7: Int, $before7: String, $last7: Int, $after8: String, $first8: Int, $before8: String, $last8: Int, $after9: String, $first9: Int, $before9: String, $last9: Int, $after10: String, $first10: Int, $before10: String, $last10: Int, $after11: String, $first11: Int, $before11: String, $last11: Int, $id: ID, $vehicleID: ID) {\n    vehicle (id: $id, vehicleID: $vehicleID) {\n        name\n        model\n        vehicleClass\n        manufacturers\n        costInCredits\n        length\n        crew\n        passengers\n        maxAtmospheringSpeed\n        cargoCapacity\n        consumables\n        pilotConnection (after: $after10, first: $first10, before: $before10, last: $last10) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n                startCursor\n                endCursor\n            }\n            edges {\n                node {\n                    name\n                    birthYear\n                    eyeColor\n                    gender\n                    hairColor\n                    height\n                    mass\n                    skinColor\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    filmConnection (after: $after, first: $first, before: $before, last: $last) {\n                        totalCount\n                    }\n                    species {\n                        name\n                        classification\n                        designation\n                        averageHeight\n                        averageLifespan\n                        eyeColors\n                        hairColors\n                        skinColors\n                        language\n                        created\n                        edited\n                        id\n                    }\n                    starshipConnection (after: $after1, first: $first1, before: $before1, last: $last1) {\n                        totalCount\n                    }\n                    vehicleConnection (after: $after2, first: $first2, before: $before2, last: $last2) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                cursor\n            }\n            totalCount\n            pilots {\n                name\n                birthYear\n                eyeColor\n                gender\n                hairColor\n                height\n                mass\n                skinColor\n                homeworld {\n                    name\n                    diameter\n                    rotationPeriod\n                    orbitalPeriod\n                    gravity\n                    population\n                    climates\n                    terrains\n                    surfaceWater\n                    residentConnection (after: $after3, first: $first3, before: $before3, last: $last3) {\n                        totalCount\n                    }\n                    filmConnection (after: $after4, first: $first4, before: $before4, last: $last4) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                filmConnection (after: $after5, first: $first5, before: $before5, last: $last5) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    films {\n                        title\n                        episodeID\n                        openingCrawl\n                        director\n                        producers\n                        releaseDate\n                        created\n                        edited\n                        id\n                    }\n                }\n                species {\n                    name\n                    classification\n                    designation\n                    averageHeight\n                    averageLifespan\n                    eyeColors\n                    hairColors\n                    skinColors\n                    language\n                    homeworld {\n                        name\n                        diameter\n                        rotationPeriod\n                        orbitalPeriod\n                        gravity\n                        population\n                        climates\n                        terrains\n                        surfaceWater\n                        created\n                        edited\n                        id\n                    }\n                    personConnection (after: $after6, first: $first6, before: $before6, last: $last6) {\n                        totalCount\n                    }\n                    filmConnection (after: $after7, first: $first7, before: $before7, last: $last7) {\n                        totalCount\n                    }\n                    created\n                    edited\n                    id\n                }\n                starshipConnection (after: $after8, first: $first8, before: $before8, last: $last8) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    starships {\n                        name\n                        model\n                        starshipClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        hyperdriveRating\n                        MGLT\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                vehicleConnection (after: $after9, first: $first9, before: $before9, last: $last9) {\n                    pageInfo {\n                        hasNextPage\n                        hasPreviousPage\n                        startCursor\n                        endCursor\n                    }\n                    edges {\n                        cursor\n                    }\n                    totalCount\n                    vehicles {\n                        name\n                        model\n                        vehicleClass\n                        manufacturers\n                        costInCredits\n                        length\n                        crew\n                        passengers\n                        maxAtmospheringSpeed\n                        cargoCapacity\n                        consumables\n                        created\n                        edited\n                        id\n                    }\n                }\n                created\n                edited\n                id\n            }\n        }\n        filmConnection (after: $after11, first: $first11, before: $before11, last: $last11) {\n            totalCount\n        }\n        created\n        edited\n        id\n    }\n}",
										"variables": "{\n  \"after\": \"\",\n  \"first\": 0,\n  \"before\": \"\",\n  \"last\": 0,\n  \"after1\": \"\",\n  \"first1\": 0,\n  \"before1\": \"\",\n  \"last1\": 0,\n  \"after2\": \"\",\n  \"first2\": 0,\n  \"before2\": \"\",\n  \"last2\": 0,\n  \"after3\": \"\",\n  \"first3\": 0,\n  \"before3\": \"\",\n  \"last3\": 0,\n  \"after4\": \"\",\n  \"first4\": 0,\n  \"before4\": \"\",\n  \"last4\": 0,\n  \"after5\": \"\",\n  \"first5\": 0,\n  \"before5\": \"\",\n  \"last5\": 0,\n  \"after6\": \"\",\n  \"first6\": 0,\n  \"before6\": \"\",\n  \"last6\": 0,\n  \"after7\": \"\",\n  \"first7\": 0,\n  \"before7\": \"\",\n  \"last7\": 0,\n  \"after8\": \"\",\n  \"first8\": 0,\n  \"before8\": \"\",\n  \"last8\": 0,\n  \"after9\": \"\",\n  \"first9\": 0,\n  \"before9\": \"\",\n  \"last9\": 0,\n  \"after10\": \"\",\n  \"first10\": 0,\n  \"before10\": \"\",\n  \"last10\": 0,\n  \"after11\": \"\",\n  \"first11\": 0,\n  \"before11\": \"\",\n  \"last11\": 0,\n  \"id\": 0,\n  \"vehicleID\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						},
						{
							"name": "node",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query node ($id: ID!) {\n    node (id: $id) {\n        id\n    }\n}",
										"variables": "{\n  \"id\": 0\n}"
									}
								},
								"url": {
									"raw": "https://swapi-graphql.netlify.app/.netlify/functions/index",
									"protocol": "https",
									"host": [
										"swapi-graphql",
										"netlify",
										"app"
									],
									"path": [
										".netlify",
										"functions",
										"index"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "GraphQL Course",
			"item": [
				{
					"name": "queries",
					"item": [
						{
							"name": "allHellos",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query allHellos {\n    allHellos {\n        text\n        randomNumber\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "oneHello",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query oneHello {\n    oneHello {\n        text\n        randomNumber\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "books",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query books ($author: String) {\n    books (author: $author) {\n        title\n        publisher\n        author {\n            name\n            originCountry\n            addresses {\n                street\n                city\n                zipCode\n                country\n            }\n        }\n        released {\n            year\n            printedEdition\n            releasedCountry\n        }\n    }\n}",
										"variables": "{\n  \"author\": \"\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "booksByReleased",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query booksByReleased ($releasedInput: ReleaseHistoryInput!) {\n    booksByReleased (releasedInput: $releasedInput) {\n        title\n        publisher\n        author {\n            name\n            originCountry\n            addresses {\n                street\n                city\n                zipCode\n                country\n            }\n        }\n        released {\n            year\n            printedEdition\n            releasedCountry\n        }\n    }\n}",
										"variables": "{\n  \"releasedInput\": {\n    \"year\": 0,\n    \"printedEdition\": true\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "mobileApps",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query mobileApps ($mobileAppFilter: MobileAppFilter) {\n    mobileApps (mobileAppFilter: $mobileAppFilter) {\n        name\n        version\n        platform\n        author {\n            name\n            originCountry\n            addresses {\n                street\n                city\n                zipCode\n                country\n            }\n        }\n        appId\n        releaseDate\n        downloaded\n        homepage\n        category\n    }\n}",
										"variables": "{\n  \"mobileAppFilter\": {\n    \"name\": \"\",\n    \"version\": \"\",\n    \"platform\": \"\",\n    \"author\": {\n      \"name\": \"\"\n    },\n    \"releasedAfter\": \"\",\n    \"minimumDownload\": \"\",\n    \"category\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "pets",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query pets ($petFilter: PetFilter) {\n    pets (petFilter: $petFilter) {\n        name\n        food\n        breed\n    }\n}",
										"variables": "{\n  \"petFilter\": {\n    \"petType\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "smartSearch",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query smartSearch ($keyword: String) {\n    smartSearch (keyword: $keyword) {\n        ... on Hello {\n            text\n            randomNumber\n        }\n        ... on Book {\n            title\n            publisher\n            author {\n                name\n                originCountry\n                addresses {\n                    street\n                    city\n                    zipCode\n                    country\n                }\n            }\n            released {\n                year\n                printedEdition\n                releasedCountry\n            }\n        }\n    }\n}",
										"variables": "{\n  \"keyword\": \"\"\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "additionalOnRequest",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query additionalOnRequest {\n    additionalOnRequest\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "me",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query me {\n    me {\n        id\n        username\n        email\n        avatar\n        createDateTime\n        displayName\n        problems {\n            id\n            createDateTime\n            prettyCreateDateTime\n            title\n            content\n            tags\n            solutionCount\n            author {\n                id\n                username\n                email\n                avatar\n                createDateTime\n                displayName\n                problems {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    title\n                    content\n                    tags\n                    solutionCount\n                    solutions {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        content\n                        category\n                        voteAsGoodCount\n                        voteAsBadCount\n                    }\n                }\n            }\n        }\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "problemLatestList",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query problemLatestList {\n    problemLatestList {\n        id\n        createDateTime\n        prettyCreateDateTime\n        title\n        content\n        tags\n        solutionCount\n        author {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n        solutions {\n            id\n            createDateTime\n            prettyCreateDateTime\n            content\n            category\n            voteAsGoodCount\n            voteAsBadCount\n        }\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "itemSearch",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query itemSearch ($filter: SearchItemFilter) {\n    itemSearch (filter: $filter) {\n        id\n        createDateTime\n        prettyCreateDateTime\n        content\n        author {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n    }\n}",
										"variables": "{\n  \"filter\": {\n    \"keyword\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "problemDetail",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "query problemDetail ($id: ID!) {\n    problemDetail (id: $id) {\n        id\n        createDateTime\n        prettyCreateDateTime\n        title\n        content\n        tags\n        solutionCount\n        author {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n        solutions {\n            id\n            createDateTime\n            prettyCreateDateTime\n            content\n            category\n            voteAsGoodCount\n            voteAsBadCount\n        }\n    }\n}",
										"variables": "{\n  \"id\": 0\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "mutations",
					"item": [
						{
							"name": "addHello",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation addHello ($helloInput: HelloInput!) {\n    addHello (helloInput: $helloInput)\n}",
										"variables": "{\n  \"helloInput\": {\n    \"text\": \"\",\n    \"number\": 0\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "replaceHelloText",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation replaceHelloText ($helloInput: HelloInput!) {\n    replaceHelloText (helloInput: $helloInput) {\n        text\n        randomNumber\n    }\n}",
										"variables": "{\n  \"helloInput\": {\n    \"text\": \"\",\n    \"number\": 0\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "deleteHello",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation deleteHello ($number: Int!) {\n    deleteHello (number: $number)\n}",
										"variables": "{\n  \"number\": 0\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "userCreate",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation userCreate ($user: UserCreateInput!) {\n    userCreate (user: $user) {\n        user {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                    problems {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        title\n                        content\n                        tags\n                        solutionCount\n                    }\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n        authToken {\n            authToken\n            expiryTime\n        }\n    }\n}",
										"variables": "{\n  \"user\": {\n    \"username\": \"\",\n    \"email\": \"\",\n    \"password\": \"\",\n    \"displayName\": \"\",\n    \"avatar\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "userLogin",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation userLogin ($user: UserLoginInput!) {\n    userLogin (user: $user) {\n        user {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                    problems {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        title\n                        content\n                        tags\n                        solutionCount\n                    }\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n        authToken {\n            authToken\n            expiryTime\n        }\n    }\n}",
										"variables": "{\n  \"user\": {\n    \"username\": \"\",\n    \"password\": \"\"\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "userActivation",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation userActivation ($user: UserActivationInput!) {\n    userActivation (user: $user) {\n        isActive\n    }\n}",
										"variables": "{\n  \"user\": {\n    \"username\": 0,\n    \"active\": true\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "problemCreate",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation problemCreate ($problem: ProblemCreateInput!) {\n    problemCreate (problem: $problem) {\n        problem {\n            id\n            createDateTime\n            prettyCreateDateTime\n            title\n            content\n            tags\n            solutionCount\n            author {\n                id\n                username\n                email\n                avatar\n                createDateTime\n                displayName\n                problems {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    title\n                    content\n                    tags\n                    solutionCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                    solutions {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        content\n                        category\n                        voteAsGoodCount\n                        voteAsBadCount\n                    }\n                }\n            }\n            solutions {\n                id\n                createDateTime\n                prettyCreateDateTime\n                content\n                category\n                voteAsGoodCount\n                voteAsBadCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n            }\n        }\n    }\n}",
										"variables": "{\n  \"problem\": {\n    \"title\": \"\",\n    \"content\": \"\",\n    \"tags\": [\n      \"\"\n    ]\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "solutionCreate",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation solutionCreate ($solution: SolutionCreateInput!) {\n    solutionCreate (solution: $solution) {\n        solution {\n            id\n            createDateTime\n            prettyCreateDateTime\n            content\n            category\n            voteAsGoodCount\n            voteAsBadCount\n            author {\n                id\n                username\n                email\n                avatar\n                createDateTime\n                displayName\n                problems {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    title\n                    content\n                    tags\n                    solutionCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                    solutions {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        content\n                        category\n                        voteAsGoodCount\n                        voteAsBadCount\n                    }\n                }\n            }\n        }\n    }\n}",
										"variables": "{\n  \"solution\": {\n    \"content\": \"\",\n    \"category\": \"\",\n    \"problemId\": 0\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "solutionVote",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "mutation solutionVote ($vote: SolutionVoteInput!) {\n    solutionVote (vote: $vote) {\n        solution {\n            id\n            createDateTime\n            prettyCreateDateTime\n            content\n            category\n            voteAsGoodCount\n            voteAsBadCount\n            author {\n                id\n                username\n                email\n                avatar\n                createDateTime\n                displayName\n                problems {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    title\n                    content\n                    tags\n                    solutionCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                    solutions {\n                        id\n                        createDateTime\n                        prettyCreateDateTime\n                        content\n                        category\n                        voteAsGoodCount\n                        voteAsBadCount\n                    }\n                }\n            }\n        }\n    }\n}",
										"variables": "{\n  \"vote\": {\n    \"solutionId\": 0,\n    \"voteAsGood\": true\n  }\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "subscriptions",
					"item": [
						{
							"name": "randomStock",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "subscription randomStock {\n    randomStock {\n        symbol\n        price\n        lastTradeDateTime\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "problemAdded",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "subscription problemAdded {\n    problemAdded {\n        id\n        createDateTime\n        prettyCreateDateTime\n        title\n        content\n        tags\n        solutionCount\n        author {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n        solutions {\n            id\n            createDateTime\n            prettyCreateDateTime\n            content\n            category\n            voteAsGoodCount\n            voteAsBadCount\n        }\n    }\n}",
										"variables": "{}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						},
						{
							"name": "solutionVoteChanged",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "graphql",
									"graphql": {
										"query": "subscription solutionVoteChanged ($solutionId: ID!) {\n    solutionVoteChanged (solutionId: $solutionId) {\n        id\n        createDateTime\n        prettyCreateDateTime\n        content\n        category\n        voteAsGoodCount\n        voteAsBadCount\n        author {\n            id\n            username\n            email\n            avatar\n            createDateTime\n            displayName\n            problems {\n                id\n                createDateTime\n                prettyCreateDateTime\n                title\n                content\n                tags\n                solutionCount\n                author {\n                    id\n                    username\n                    email\n                    avatar\n                    createDateTime\n                    displayName\n                }\n                solutions {\n                    id\n                    createDateTime\n                    prettyCreateDateTime\n                    content\n                    category\n                    voteAsGoodCount\n                    voteAsBadCount\n                    author {\n                        id\n                        username\n                        email\n                        avatar\n                        createDateTime\n                        displayName\n                    }\n                }\n            }\n        }\n    }\n}",
										"variables": "{\n  \"solutionId\": 0\n}"
									}
								},
								"url": {
									"raw": "http://localhost:8080/graphql",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "8080",
									"path": [
										"graphql"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}